面向对象编程（简称OOP， Object Oriented Programmaing）
    是一种程序的设计思想，OOP把对象作为程序的基本单元，一个对象包含了数据和操作数据的函数。
    
  面向过程：面向过程的设计把计算机程序视为一系列的命令集合，既一组函数的顺序执行。为了简化程序设计，
            面向过程的编程把大的函数分割为小的函数，用来降低系统的复杂度。
  面向对象：面向对象的设计把计算机程序视为一组对象的集合，每个对象都可以接受其他对象发过来的消息并进行处理，
            计算机程序的执行就是一系列消息在各个对象之间的传统。

  类和对象：类（class）：用来描述具有相同属性和方法的对象的集合。类定义了该集合中每个对象所共有的属性和方法。
                   属性：又叫类变量，类变量定义在类中且在类中的函数之外，类中的所有函数都可以使用。
                   方法：类中定义的函数。在类中使用，使用def关键字定义，但是与一般函数定义不同，类方法
                         必须包含参数self，且self必须为第一个参数，self代表的是类的实例。
           对象：通过类定义的数据结构实例，对象包括两个数据成员：属性和方法
                实例化：通过类创建出一个对象，叫做实例化一个类             
     构造方法：是类中的一种特殊方法，在类实例化对象时被调用
               对象的创建就是通过构造方法来完成，主要功能是完成对象的初始化，以及初始化(赋初值)属性
               构造方法以双下划线__开头，名称为__init__(),构造方法可以接收参数
               每个类必须有一个构造方法，当没有手动添加构造方法时，Python会自动创建一个不执行任何操作的默认构造方法。

面向对象编程三大特性：
    封装：
        封装是对类的封装，封装可以隐藏方法的内部实现，仅仅提供一个调用的方法给其他人，使用这个类或这个方法的人不需要关心
              方法是怎么实现的，只需要知道怎么调用就行。           

        封装通俗的讲就是将类的属性和方法分为共有和私有的，公有的可以被外界访问，私有的不能被外界访问，这就是封装中最关键概念：访问控制

        访问控制：公有的：任何类都可以访问，Python中在类中定义属性和方法时默认为公有的
                  受保护的：在定义受保护的属性和方法时，需要在属性名或方法名前加一个下划线，是一种约定的规范，不是在语言层面上真的实现了访问控制
                            ，一栏可以在外部被访问。（约定俗成是类之内和子类中可用）。
                  私有的：在定义私有的属性和方法时，需要在属性名或方法名前加两个下划线，只有类自身可以访问。


    继承：
         继承是类与类之间的一种关系，可以理解为一个类从另一个类获取属性和方法的过程。
         例如：定义类B继承自类A，class B(A)
         继承关系定义后，A为B的父类，B为A的子类
         子类会拥有父类的所有非私有的属性和方法
         Python允许一个类继承自多个父类    
  
       重写：在子类中对父类的的方法重写实现
             前提：要具有继承关系
                   子类中重写的方法名称必须与父类中被重写的方法名称相同
             当父类中的方法被重写后，在子类中继承下来的父类方法会被覆盖


   
    多态：不同的子类对象调用相同的方法，实现不同的结果
          同一个方法作用于不同的对象，实现不同的结果
         前提：要有继承
               要有重写


异常处理：
    异常：异常是一个事件，该事件会在程序执行过程中发生，一般情况下在Python无法正常处理程序时就会发生，异常的发生会影响程序的正常执行。
          需要捕获异常处理它，否则程序会终止执行

   处理代码：try...except:try..except语句用来检测try语句块中的异常，从而让except捕获异常信息并处理，异常被捕获后会先执行except后的代码在结束程序执行
             try...except Exception as e: Exception表示所有异常
             try...finally:无论异常是否发生，在程序结束前finally中的语句都会被执行
             try...except..finally:当有异常发生时except和finally后的语句都会执行，当没有异常发生时finally后的语句会执行 

从本地导入python包命令：
   进入包，setup.py 所在目录
    python setup.py build
    python setup.py install 
             









